{
	"id": 0,
	"name": "@klasa/utils",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 171,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/index.ts",
			"children": [
				{
					"id": 193,
					"name": "Builtin",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 111
				},
				{
					"id": 194,
					"name": "DeepRequired",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 112
				},
				{
					"id": 196,
					"name": "PartialRequired",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 119
				},
				{
					"id": 192,
					"name": "Primitive",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 110
				},
				{
					"id": 195,
					"name": "RequiredExcept",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 116
				},
				{
					"id": 183,
					"name": "Thenable",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 87
				},
				{
					"id": 172,
					"name": "arrayStrictEquals",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				},
				{
					"id": 173,
					"name": "chunk",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 8
				},
				{
					"id": 174,
					"name": "codeBlock",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 18
				},
				{
					"id": 175,
					"name": "deepClone",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 32
				},
				{
					"id": 176,
					"name": "exec",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 73
				},
				{
					"id": 177,
					"name": "isClass",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 75
				},
				{
					"id": 178,
					"name": "isFunction",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 79
				},
				{
					"id": 179,
					"name": "isNumber",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 83
				},
				{
					"id": 180,
					"name": "isObject",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 28
				},
				{
					"id": 181,
					"name": "isPrimitive",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 24
				},
				{
					"id": 182,
					"name": "isThenable",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 100
				},
				{
					"id": 184,
					"name": "makeObject",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 104
				},
				{
					"id": 185,
					"name": "mergeDefault",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 125
				},
				{
					"id": 186,
					"name": "mergeObjects",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 132
				},
				{
					"id": 187,
					"name": "objectToTuples",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 139
				},
				{
					"id": 188,
					"name": "regExpEsc",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 145
				},
				{
					"id": 189,
					"name": "sleep",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 156
				},
				{
					"id": 190,
					"name": "toTitleCase",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 164
				},
				{
					"id": 191,
					"name": "tryParse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 168
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						193,
						194,
						196,
						192,
						195,
						183,
						172,
						173,
						174,
						175,
						176,
						177,
						178,
						179,
						180,
						181,
						182,
						184,
						185,
						186,
						187,
						188,
						189,
						190,
						191
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"lib/arrayStrictEquals\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/arrayStrictEquals.ts",
			"children": [
				{
					"id": 2,
					"name": "arrayStrictEquals",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "arrayStrictEquals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Compare if both arrays are strictly equal"
							},
							"typeParameter": [
								{
									"id": 4,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									}
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "arr1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The first array to compare"
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										}
									}
								},
								{
									"id": 6,
									"name": "arr2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The second array to compare\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/arrayStrictEquals.ts",
							"line": 6,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/arrayStrictEquals.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 7,
			"name": "\"lib/chunk\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/chunk.ts",
			"children": [
				{
					"id": 8,
					"name": "chunk",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 9,
							"name": "chunk",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Splits up an array into chunks",
								"tags": [
									{
										"tag": "since",
										"text": "0.5.0"
									}
								]
							},
							"typeParameter": [
								{
									"id": 10,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 11,
									"name": "entries",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to be merged"
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "array",
											"elementType": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								},
								{
									"id": 12,
									"name": "chunkSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to merge\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/chunk.ts",
							"line": 7,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						8
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/chunk.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 13,
			"name": "\"lib/codeBlock\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/codeBlock.ts",
			"children": [
				{
					"id": 14,
					"name": "Stringifiable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 15,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 16,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/codeBlock.ts",
									"line": 4,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								15
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/codeBlock.ts",
							"line": 3,
							"character": 23
						}
					]
				},
				{
					"id": 17,
					"name": "zws",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "lib/codeBlock.ts",
							"line": 1,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "String.fromCharCode(8203)"
				},
				{
					"id": 18,
					"name": "codeBlock",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 19,
							"name": "codeBlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes a codeblock markup string",
								"tags": [
									{
										"tag": "since",
										"text": "0.0.1"
									}
								]
							},
							"parameters": [
								{
									"id": 20,
									"name": "lang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The codeblock language"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21,
									"name": "expression",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The expression to be wrapped in the codeblock\n"
									},
									"type": {
										"type": "reference",
										"id": 14,
										"name": "Stringifiable"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/codeBlock.ts",
							"line": 13,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						14
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						17
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/codeBlock.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 31,
			"name": "\"lib/deepClone\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/deepClone.ts",
			"children": [
				{
					"id": 32,
					"name": "deepClone",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "deepClone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Deep clone a value",
								"tags": [
									{
										"tag": "since",
										"text": "0.5.0"
									}
								]
							},
							"typeParameter": [
								{
									"id": 34,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 35,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to clone\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/deepClone.ts",
							"line": 9,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						32
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/deepClone.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 36,
			"name": "\"lib/exec\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/exec.ts",
			"children": [
				{
					"id": 37,
					"name": "PromisifiedExec",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 38,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 39,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 40,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 42,
													"name": "stderr",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 5,
															"character": 61
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 41,
													"name": "stdout",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 5,
															"character": 45
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														42,
														41
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/exec.ts",
													"line": 5,
													"character": 37
												}
											]
										}
									}
								],
								"name": "PromiseWithChild"
							}
						},
						{
							"id": 43,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 44,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 45,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 46,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 47,
															"name": "encoding",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/exec.ts",
																	"line": 6,
																	"character": 38
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "stringLiteral",
																		"value": "buffer"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																47
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 6,
															"character": 27
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "ExecOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 48,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 50,
													"name": "stderr",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 6,
															"character": 115
														}
													],
													"type": {
														"type": "reference",
														"name": "Buffer"
													}
												},
												{
													"id": 49,
													"name": "stdout",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 6,
															"character": 99
														}
													],
													"type": {
														"type": "reference",
														"name": "Buffer"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														50,
														49
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/exec.ts",
													"line": 6,
													"character": 91
												}
											]
										}
									}
								],
								"name": "PromiseWithChild"
							}
						},
						{
							"id": 51,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 52,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 53,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 54,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 55,
															"name": "encoding",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/exec.ts",
																	"line": 7,
																	"character": 38
																}
															],
															"type": {
																"type": "reference",
																"name": "BufferEncoding"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																55
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 7,
															"character": 27
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "ExecOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 56,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 58,
													"name": "stderr",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 7,
															"character": 114
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57,
													"name": "stdout",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 7,
															"character": 98
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														58,
														57
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/exec.ts",
													"line": 7,
													"character": 90
												}
											]
										}
									}
								],
								"name": "PromiseWithChild"
							}
						},
						{
							"id": 59,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 60,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 61,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ExecOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 62,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 64,
													"name": "stderr",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 8,
															"character": 83
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 63,
													"name": "stdout",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 8,
															"character": 67
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														64,
														63
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/exec.ts",
													"line": 8,
													"character": 59
												}
											]
										}
									}
								],
								"name": "PromiseWithChild"
							}
						},
						{
							"id": 65,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 66,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 67,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 68,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 69,
																	"name": "encoding",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "lib/exec.ts",
																			"line": 9,
																			"character": 40
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "null"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		69
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "ExecOptions"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 70,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 72,
													"name": "stderr",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 9,
															"character": 133
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Buffer"
															}
														]
													}
												},
												{
													"id": 71,
													"name": "stdout",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/exec.ts",
															"line": 9,
															"character": 108
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Buffer"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														72,
														71
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/exec.ts",
													"line": 9,
													"character": 100
												}
											]
										}
									}
								],
								"name": "PromiseWithChild"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/exec.ts",
							"line": 4,
							"character": 25
						}
					]
				},
				{
					"id": 73,
					"name": "exec",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Promisified version of child_process.exec for use with await",
						"tags": [
							{
								"tag": "param",
								"text": "The command to run",
								"param": "command"
							},
							{
								"tag": "param",
								"text": "The options to pass to exec\n",
								"param": "options"
							}
						]
					},
					"sources": [
						{
							"fileName": "lib/exec.ts",
							"line": 17,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 37,
						"name": "PromisifiedExec"
					},
					"defaultValue": "promisify(childProcessExec)"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						37
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						73
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/exec.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 74,
			"name": "\"lib/isClass\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/isClass.ts",
			"children": [
				{
					"id": 75,
					"name": "isClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 76,
							"name": "isClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Verify if the input is a class constructor."
							},
							"parameters": [
								{
									"id": 77,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The function to verify\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isClass.ts",
							"line": 5,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/isClass.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 78,
			"name": "\"lib/isFunction\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/isFunction.ts",
			"children": [
				{
					"id": 79,
					"name": "isFunction",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 80,
							"name": "isFunction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Verify if the input is a function."
							},
							"parameters": [
								{
									"id": 81,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The function to verify\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "input",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "Function"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isFunction.ts",
							"line": 5,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/isFunction.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 82,
			"name": "\"lib/isNumber\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/isNumber.ts",
			"children": [
				{
					"id": 83,
					"name": "isNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 84,
							"name": "isNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Verify if a number is a finite number."
							},
							"parameters": [
								{
									"id": 85,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The number to verify\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "input",
								"asserts": false,
								"targetType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isNumber.ts",
							"line": 5,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						83
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/isNumber.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 27,
			"name": "\"lib/isObject\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/isObject.ts",
			"children": [
				{
					"id": 28,
					"name": "isObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 29,
							"name": "isObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Verify if the input is an object literal (or class)."
							},
							"parameters": [
								{
									"id": 30,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to verify\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "input",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"name": "PropertyKey"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "Record"
										},
										{
											"type": "intrinsic",
											"name": "object"
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isObject.ts",
							"line": 5,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						28
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/isObject.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 22,
			"name": "\"lib/isPrimitive\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/isPrimitive.ts",
			"children": [
				{
					"id": 23,
					"name": "PRIMITIVE_TYPES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "lib/isPrimitive.ts",
							"line": 1,
							"character": 21
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "['string', 'bigint', 'number', 'boolean']"
				},
				{
					"id": 24,
					"name": "isPrimitive",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 25,
							"name": "isPrimitive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check whether a value is a primitive",
								"tags": [
									{
										"tag": "since",
										"text": "0.5.0"
									}
								]
							},
							"parameters": [
								{
									"id": 26,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The input to check\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "input",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "false"
										},
										{
											"type": "intrinsic",
											"name": "true"
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isPrimitive.ts",
							"line": 8,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						23
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						24
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/isPrimitive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 86,
			"name": "\"lib/isThenable\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/isThenable.ts",
			"children": [
				{
					"id": 87,
					"name": "Thenable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 89,
							"name": "catch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/isThenable.ts",
									"line": 5,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 88,
							"name": "then",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/isThenable.ts",
									"line": 4,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								89,
								88
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/isThenable.ts",
							"line": 3,
							"character": 25
						}
					]
				},
				{
					"id": 95,
					"name": "hasCatch",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 96,
							"name": "hasCatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 97,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 98,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 99,
													"name": "catch",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "lib/isThenable.ts",
															"line": 12,
															"character": 32
														}
													],
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														99
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/isThenable.ts",
													"line": 12,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isThenable.ts",
							"line": 12,
							"character": 17
						}
					]
				},
				{
					"id": 90,
					"name": "hasThen",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 91,
							"name": "hasThen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 92,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 93,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 94,
													"name": "then",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "lib/isThenable.ts",
															"line": 8,
															"character": 30
														}
													],
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														94
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/isThenable.ts",
													"line": 8,
													"character": 23
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isThenable.ts",
							"line": 8,
							"character": 16
						}
					]
				},
				{
					"id": 100,
					"name": "isThenable",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 101,
							"name": "isThenable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Verify if an object is a promise."
							},
							"parameters": [
								{
									"id": 102,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The promise to verify\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "input",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "Thenable"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/isThenable.ts",
							"line": 20,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						87
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						95,
						90,
						100
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/isThenable.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 103,
			"name": "\"lib/makeObject\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/makeObject.ts",
			"children": [
				{
					"id": 104,
					"name": "makeObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 105,
							"name": "makeObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Turn a dotted path into a json object."
							},
							"parameters": [
								{
									"id": 106,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The dotted path"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 107,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 108,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to edit\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/makeObject.ts",
							"line": 7,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/makeObject.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 122,
			"name": "\"lib/mergeDefault\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/mergeDefault.ts",
			"children": [
				{
					"id": 123,
					"name": "NonNullObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/mergeDefault.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 124,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/mergeDefault.ts",
									"line": 6,
									"character": 20
								}
							]
						}
					}
				},
				{
					"id": 125,
					"name": "mergeDefault",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 126,
							"name": "mergeDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Sets default properties on an object that aren't already specified.",
								"tags": [
									{
										"tag": "since",
										"text": "0.5.0"
									}
								]
							},
							"typeParameter": [
								{
									"id": 127,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 123,
										"name": "NonNullObject"
									}
								},
								{
									"id": 128,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "A"
											}
										],
										"name": "Partial"
									}
								}
							],
							"parameters": [
								{
									"id": 129,
									"name": "defaults",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 123,
											"name": "NonNullObject"
										}
									}
								},
								{
									"id": 130,
									"name": "given",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Object to assign defaults to\n"
									},
									"type": {
										"type": "reference",
										"id": 128,
										"name": "B"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 112,
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 123,
													"name": "NonNullObject"
												}
											},
											{
												"type": "typeParameter",
												"name": "B",
												"constraint": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "A"
														}
													],
													"name": "Partial"
												}
											}
										]
									}
								],
								"name": "DeepRequired"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/mergeDefault.ts",
							"line": 14,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						123
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						125
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/mergeDefault.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 131,
			"name": "\"lib/mergeObjects\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/mergeObjects.ts",
			"children": [
				{
					"id": 132,
					"name": "mergeObjects",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 133,
							"name": "mergeObjects",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Merges two objects"
							},
							"typeParameter": [
								{
									"id": 134,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 135,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"parameters": [
								{
									"id": 136,
									"name": "objTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to be merged"
									},
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "intrinsic",
											"name": "object"
										}
									}
								},
								{
									"id": 137,
									"name": "objSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The object to merge\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "B",
												"constraint": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"name": "Readonly"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "intrinsic",
											"name": "object"
										}
									},
									{
										"type": "typeParameter",
										"name": "B",
										"constraint": {
											"type": "intrinsic",
											"name": "object"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/mergeObjects.ts",
							"line": 8,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						132
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/mergeObjects.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 138,
			"name": "\"lib/objectToTuples\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/objectToTuples.ts",
			"children": [
				{
					"id": 139,
					"name": "objectToTuples",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 140,
							"name": "objectToTuples",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Convert an object to a tuple",
								"tags": [
									{
										"tag": "since",
										"text": "0.5.0"
									}
								]
							},
							"parameters": [
								{
									"id": 141,
									"name": "original",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 142,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The prefix for the key\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/objectToTuples.ts",
							"line": 9,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						139
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/objectToTuples.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 143,
			"name": "\"lib/regExpEsc\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/regExpEsc.ts",
			"children": [
				{
					"id": 144,
					"name": "REGEXPESC",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "lib/regExpEsc.ts",
							"line": 1,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/[-/\\\\^$*+?.()|[\\]{}]/g"
				},
				{
					"id": 145,
					"name": "regExpEsc",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 146,
							"name": "regExpEsc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Cleans a string from regex injection",
								"tags": [
									{
										"tag": "since",
										"text": "0.0.1"
									}
								]
							},
							"parameters": [
								{
									"id": 147,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The string to clean\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/regExpEsc.ts",
							"line": 8,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						144
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						145
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/regExpEsc.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 148,
			"name": "\"lib/sleep\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/sleep.ts",
			"children": [
				{
					"id": 149,
					"name": "PromisifiedTimeout",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 150,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 151,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 152,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 153,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 154,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 155,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/sleep.ts",
							"line": 3,
							"character": 28
						}
					]
				},
				{
					"id": 156,
					"name": "sleep",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Promisified version of setTimeout for use with await",
						"tags": [
							{
								"tag": "param",
								"text": "The amount of time in ms to delay",
								"param": "delay"
							},
							{
								"tag": "param",
								"text": "Any args to pass to the .then (mostly pointless in this form)\n",
								"param": "args"
							}
						]
					},
					"sources": [
						{
							"fileName": "lib/sleep.ts",
							"line": 13,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 149,
						"name": "PromisifiedTimeout"
					},
					"defaultValue": "promisify(setTimeout)"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						149
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						156
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/sleep.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 157,
			"name": "\"lib/toTitleCase\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/toTitleCase.ts",
			"children": [
				{
					"id": 158,
					"name": "TOTITLECASE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "lib/toTitleCase.ts",
							"line": 1,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/[A-Za-zÀ-ÖØ-öø-ÿ]\\S*/g"
				},
				{
					"id": 164,
					"name": "toTitleCase",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 165,
							"name": "toTitleCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Converts a string to Title Case"
							},
							"parameters": [
								{
									"id": 166,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The string to title case\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/toTitleCase.ts",
							"line": 13,
							"character": 27
						}
					]
				},
				{
					"id": 159,
					"name": "titleCaseVariants",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 162,
							"name": "categorychannel",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/toTitleCase.ts",
									"line": 5,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"CategoryChannel\""
						},
						{
							"id": 163,
							"name": "guildmember",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/toTitleCase.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"GuildMember\""
						},
						{
							"id": 160,
							"name": "textchannel",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/toTitleCase.ts",
									"line": 3,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"TextChannel\""
						},
						{
							"id": 161,
							"name": "voicechannel",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/toTitleCase.ts",
									"line": 4,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"VoiceChannel\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								162,
								163,
								160,
								161
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/toTitleCase.ts",
							"line": 2,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						158
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						164
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						159
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/toTitleCase.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 167,
			"name": "\"lib/tryParse\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/tryParse.ts",
			"children": [
				{
					"id": 168,
					"name": "tryParse",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 169,
							"name": "tryParse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Try parse a stringified JSON string."
							},
							"parameters": [
								{
									"id": 170,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to parse\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/tryParse.ts",
							"line": 5,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						168
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/tryParse.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 109,
			"name": "\"lib/utilityTypes\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/utils/utils/src/lib/utilityTypes.ts",
			"children": [
				{
					"id": 111,
					"name": "Builtin",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/utilityTypes.ts",
							"line": 2,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 110,
								"name": "Primitive"
							},
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "reference",
								"name": "Date"
							},
							{
								"type": "reference",
								"name": "Error"
							},
							{
								"type": "reference",
								"name": "RegExp"
							}
						]
					}
				},
				{
					"id": 112,
					"name": "DeepRequired",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 113,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/utilityTypes.ts",
							"line": 4,
							"character": 24
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "typeParameter",
							"name": "T"
						},
						"extendsType": {
							"type": "reference",
							"name": "Builtin"
						},
						"trueType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "T"
								}
							],
							"name": "NonNullable"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "typeParameter",
								"name": "T"
							},
							"extendsType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "inferred",
										"name": "K"
									},
									{
										"type": "inferred",
										"name": "V"
									}
								],
								"name": "Map"
							},
							"trueType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											}
										],
										"name": "DeepRequired"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "V"
											}
										],
										"name": "DeepRequired"
									}
								],
								"name": "Map"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "typeParameter",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "inferred",
											"name": "K"
										},
										{
											"type": "inferred",
											"name": "V"
										}
									],
									"name": "ReadonlyMap"
								},
								"trueType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "K"
												}
											],
											"name": "DeepRequired"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "V"
												}
											],
											"name": "DeepRequired"
										}
									],
									"name": "ReadonlyMap"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "typeParameter",
										"name": "T"
									},
									"extendsType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "inferred",
												"name": "K"
											},
											{
												"type": "inferred",
												"name": "V"
											}
										],
										"name": "WeakMap"
									},
									"trueType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "K"
													}
												],
												"name": "DeepRequired"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "V"
													}
												],
												"name": "DeepRequired"
											}
										],
										"name": "WeakMap"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "typeParameter",
											"name": "T"
										},
										"extendsType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "Set"
										},
										"trueType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "U"
														}
													],
													"name": "DeepRequired"
												}
											],
											"name": "Set"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "typeParameter",
												"name": "T"
											},
											"extendsType": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "inferred",
														"name": "U"
													}
												],
												"name": "ReadonlySet"
											},
											"trueType": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "U"
															}
														],
														"name": "DeepRequired"
													}
												],
												"name": "ReadonlySet"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "typeParameter",
													"name": "T"
												},
												"extendsType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "inferred",
															"name": "U"
														}
													],
													"name": "WeakSet"
												},
												"trueType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeParameter",
																	"name": "U"
																}
															],
															"name": "DeepRequired"
														}
													],
													"name": "WeakSet"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "typeParameter",
														"name": "T"
													},
													"extendsType": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "Promise"
													},
													"trueType": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "U"
																	}
																],
																"name": "DeepRequired"
															}
														],
														"name": "Promise"
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "typeParameter",
															"name": "T"
														},
														"extendsType": {
															"type": "reflection",
															"declaration": {
																"id": 114,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "lib/utilityTypes.ts",
																		"line": 20,
																		"character": 19
																	}
																]
															}
														},
														"trueType": {
															"type": "reflection",
															"declaration": {
																"id": 115,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "lib/utilityTypes.ts",
																		"line": 21,
																		"character": 10
																	}
																]
															}
														},
														"falseType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeParameter",
																	"name": "T"
																}
															],
															"name": "NonNullable"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				{
					"id": 119,
					"name": "PartialRequired",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 120,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						},
						{
							"id": 121,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/utilityTypes.ts",
							"line": 26,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										],
										"name": "Omit"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										],
										"name": "Pick"
									}
								],
								"name": "Required"
							}
						]
					}
				},
				{
					"id": 110,
					"name": "Primitive",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/utilityTypes.ts",
							"line": 1,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 116,
					"name": "RequiredExcept",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 117,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						},
						{
							"id": 118,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/utilityTypes.ts",
							"line": 24,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										],
										"name": "Pick"
									}
								],
								"name": "Partial"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										],
										"name": "Omit"
									}
								],
								"name": "Required"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						111,
						112,
						119,
						110,
						116
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/utilityTypes.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				171,
				1,
				7,
				13,
				31,
				36,
				74,
				78,
				82,
				27,
				22,
				86,
				103,
				122,
				131,
				138,
				143,
				148,
				157,
				167,
				109
			]
		}
	]
}